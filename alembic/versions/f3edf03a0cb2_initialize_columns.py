"""Initialize Columns

Revision ID: f3edf03a0cb2
Revises: 
Create Date: 2025-07-25 19:23:04.644947

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f3edf03a0cb2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('country_uuid', sa.Uuid(), nullable=False),
    sa.Column('country_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('flag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('country_id'),
    sa.UniqueConstraint('country_uuid')
    )
    op.create_table('stateorregion',
    sa.Column('state_or_region_id', sa.Integer(), nullable=False),
    sa.Column('state_or_region_uuid', sa.Uuid(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('state_or_region_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ),
    sa.PrimaryKeyConstraint('state_or_region_id'),
    sa.UniqueConstraint('state_or_region_uuid')
    )
    op.create_table('province',
    sa.Column('province_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('province_uuid', sa.Uuid(), nullable=False),
    sa.Column('state_or_region_id', sa.Integer(), nullable=False),
    sa.Column('province_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ),
    sa.ForeignKeyConstraint(['state_or_region_id'], ['stateorregion.state_or_region_id'], ),
    sa.PrimaryKeyConstraint('province_id'),
    sa.UniqueConstraint('province_uuid')
    )
    op.create_table('city',
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('city_uuid', sa.Uuid(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('state_or_region_id', sa.Integer(), nullable=False),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.Column('city_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ),
    sa.ForeignKeyConstraint(['province_id'], ['province.province_id'], ),
    sa.ForeignKeyConstraint(['state_or_region_id'], ['stateorregion.state_or_region_id'], ),
    sa.PrimaryKeyConstraint('city_id'),
    sa.UniqueConstraint('city_uuid')
    )
    op.create_table('locality',
    sa.Column('locality_id', sa.Integer(), nullable=False),
    sa.Column('locality_uuid', sa.Uuid(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('locality_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('local_label', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], ),
    sa.PrimaryKeyConstraint('locality_id'),
    sa.UniqueConstraint('locality_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('locality')
    op.drop_table('city')
    op.drop_table('province')
    op.drop_table('stateorregion')
    op.drop_table('country')
    # ### end Alembic commands ###
